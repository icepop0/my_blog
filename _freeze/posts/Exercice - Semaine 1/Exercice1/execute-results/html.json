{
  "hash": "ce210173421ca8792076dc94352048f6",
  "result": {
    "markdown": "---\ntitle: \"Exercice1\"\nauthor: \"Angel Sineau\"\nformat: html\neditor: visual\n---\n\n\n## Exercices - Semaine 1\n\n## M1 ECAP - 2023/24\n\nPour cet exercice, nous allons télécharger un jeu de données issu de https://data.gouv.fr sur les infrastructures olympiques des JO 2024 à Paris. Le jeu de données est disponible ici.\n\nL’objectif de cet exercice est d’utiliser uniquement des fonctions de R base.\n\n#### 1. Créez un script .R intitulé exercice.R.\n\n#### 2. Lisez le fichier téléchargé. Le résultat sera affecté à l’objet de nom data_ex.\n\n#### Le jeux de données contient 4 colonnes.\n\n#### Quels sont les noms et la nature des colonnes ?\n\n#### Combien de lignes contient la data.frame ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex = read.csv2(\"paris-2024-sites-olympiques-et-paralympiques-franciliens.csv\") \n\nsummary(data_ex) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  geo_point             nom            sites_olympiques_paralympiques\n Length:31          Length:31          Length:31                     \n Class :character   Class :character   Class :character              \n Mode  :character   Mode  :character   Mode  :character              \n    sports         \n Length:31         \n Class :character  \n Mode  :character  \n```\n:::\n\n```{.r .cell-code}\ncolnames(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"geo_point\"                      \"nom\"                           \n[3] \"sites_olympiques_paralympiques\" \"sports\"                        \n```\n:::\n\n```{.r .cell-code}\nstr(data_ex) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.751095, 2.0759\" \"48.788046, 2.034987\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Golf national\" \"Vélodrome National de Saint-Quentin-en-Yvelines\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"Site olympique\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"Golf\" \"Cyclisme sur piste,Para cyclisme sur piste\" ...\n```\n:::\n\n```{.r .cell-code}\ndim(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31  4\n```\n:::\n:::\n\n\n-   Les noms des colonnes dans ma base `data_ex` sont `geo_point`, `nom`, `sites_olympiques_paralympiques`, et `sports`.\n\n-   Toutes les colonnes sont de type `character`, ce qui signifie qu'elles contiennent des données textuelles.\n\n-   Ma base `data_ex` contient 31 lignes, indiquant que j'ai des informations sur 31 sites olympiques ou paralympiques différents.\n\n#### 3 & 4. Combien y a t’il de sites olympiques, paralympiques ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_ex$sites_olympiques_paralympiques)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n                                                   Site olympique \n                               2                               10 \nSite olympique,Site paralympique                Site paralympique \n                              16                                3 \n```\n:::\n:::\n\n\n10 sites sont seulement olympiques, 3 sont seulement paralympiques, et 16 sont mixtes. Il y a également 2 valeurs manquantes, dans la colonne `sites_olympiques_paralympiques.`\n\n#### \n\n#### 5. Quels sont les sites qui accueillent plusieurs disciplines sportives ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_multiples_sports <- data_ex[grep(\",\", data_ex$sports), ]\n\nprint(sites_multiples_sports$nom) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Stade de France\"                                \n [2] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n [3] \"Stade Roland Garros\"                            \n [4] \"Arena Paris Sud 4 (Porte de Versailles)\"        \n [5] \"Pont d'Iéna\"                                    \n [6] \"Arena Bercy\"                                    \n [7] \"Arena Paris nord\"                               \n [8] \"Arena Paris Sud 6 (Porte de Versailles)\"        \n [9] \"Stade de la Concorde\"                           \n[10] \"Arena Champs de Mars\"                           \n[11] \"La Défense Arena\"                               \n[12] \"Stade nautique\"                                 \n[13] \"Arena Paris Sud 1 (Porte de Versailles)\"        \n[14] \"Stade Tour Eiffel\"                              \n[15] \"Arena La Chapelle\"                              \n[16] \"Centre aquatique\"                               \n[17] \"Château de Versailles\"                          \n[18] \"Grand Palais\"                                   \n[19] \"Invalides\"                                      \n```\n:::\n\n```{.r .cell-code}\ntable(sites_multiples_sports$nom) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n                                    Arena Bercy \n                                              1 \n                           Arena Champs de Mars \n                                              1 \n                              Arena La Chapelle \n                                              1 \n                               Arena Paris nord \n                                              1 \n        Arena Paris Sud 1 (Porte de Versailles) \n                                              1 \n        Arena Paris Sud 4 (Porte de Versailles) \n                                              1 \n        Arena Paris Sud 6 (Porte de Versailles) \n                                              1 \n                               Centre aquatique \n                                              1 \n                          Château de Versailles \n                                              1 \n                                   Grand Palais \n                                              1 \n                                      Invalides \n                                              1 \n                               La Défense Arena \n                                              1 \n                                    Pont d'Iéna \n                                              1 \n                                Stade de France \n                                              1 \n                           Stade de la Concorde \n                                              1 \n                                 Stade nautique \n                                              1 \n                            Stade Roland Garros \n                                              1 \n                              Stade Tour Eiffel \n                                              1 \nVélodrome National de Saint-Quentin-en-Yvelines \n                                              1 \n```\n:::\n\n```{.r .cell-code}\ndim(sites_multiples_sports)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19  4\n```\n:::\n:::\n\n\n19 sites accueillent plusieurs disciplines sportives.\n\n#### 6. Quels sont les disciplines para-olympiques accueillies dans ces sites franciliens ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_paralympiques_mixtes <- data_ex[grepl(\"Site paralympique\", data_ex$sites_olympiques_paralympiques), ]\n\ndisciplines_paralympiques <- unique(sites_paralympiques_mixtes$sports)\nprint(disciplines_paralympiques)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Athlétisme,Para athlétisme,Rugby\"                                \n [2] \"Cyclisme sur piste,Para cyclisme sur piste\"                      \n [3] \"Tennis,Tennis fauteuil,Boxe\"                                     \n [4] \"Para cyclisme sur route\"                                         \n [5] \"Tennis de table,Para tennis de table\"                            \n [6] \"Basketball,Basket fauteuil,Gymnastique artistique,trampoline\"    \n [7] \"Boxe,Escrime,Pentathlon moderne,Volley-ball assis\"               \n [8] \"Haltérophilie,Handball,Goalball\"                                 \n [9] \"Judo,Para judo,Lutte,Rugby fauteuil\"                             \n[10] \"Natation,Para natation,Water-polo\"                               \n[11] \"Canoë,Para canoë,Aviron,Para aviron\"                             \n[12] \"Volleyball,Boccia\"                                               \n[13] \"Volleyball de plage,Cécifoot\"                                    \n[14] \"Badminton,Para Badminton,Gymnastique rythmique,Para powerlifting\"\n[15] \"Goalball\"                                                        \n[16] \"Sports équestres,Para équitation,Pentathlon moderne\"             \n[17] \"Para athlétisme\"                                                 \n[18] \"Escrime,Escrime fauteuil,Taekwondo,Para taekwondo\"               \n[19] \"Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\"      \n```\n:::\n:::\n\n\nLes disciplines sont les suivantes :\n\n-   Para athlétisme\n\n-   Cyclisme sur piste, sur route\n\n-   Tennis de table\n\n-   Judo\n\n-   Natation\n\n-   Aviron\n\n-   Badminton\n\n-   Powerlifting\n\n-   Equitation\n\n-   Athlétisme\n\n-   Taekwondo\n\n-   Tir à l'arc\n\n-   \n\n#### 7. Quel(s) site(s) accueille(nt) le plus de disciplines différentes ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Séparation des disciplines sportives et comptage pour chaque site\n# La fonction strsplit va séparer les sports sur chaque site, qui sont séparés par des virgules\ndata_ex$sports_list <- strsplit(data_ex$sports, \",\")\n\n# Calcul du nombre de sports pour chaque site\n# La fonction sapply va appliquer la fonction length à chaque liste de sports pour chaque site\ndata_ex$nombre_sports <- sapply(data_ex$sports_list, length)\n\n# Identification du ou des site(s) qui accueillent le plus de disciplines différentes\n# La fonction which.max va trouver l'index du site ou des sites avec le nombre maximal de sports\nsites_max_sports <- data_ex[which(data_ex$nombre_sports == max(data_ex$nombre_sports)), ]\n\n# Affichage des sites avec le nombre maximum de disciplines différentes\nprint(sites_max_sports$nom)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Arena Bercy\"          \"Arena Paris nord\"     \"Stade de la Concorde\"\n[4] \"Arena Champs de Mars\" \"Stade nautique\"       \"Arena La Chapelle\"   \n[7] \"Grand Palais\"         \"Invalides\"           \n```\n:::\n:::\n\n\nLe résultat indique que les sites accueillant le plus grand nombre de disciplines différentes sont les suivants :\n\n-   Arena Bercy\n\n-   Arena Paris nord\n\n-   Stade de la Concorde\n\n-   Arena Champs de Mars\n\n-   Stade nautique\n\n-   Arena La Chapelle\n\n-   Grand Palais\n\n-   Invalides\n\n#### 8. Quel discipline aura lieu sur le plus grand nombre de sites ? Quels sont ces sites ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Séparation des disciplines sportives pour chaque site\ndata_ex$sports_list <- strsplit(data_ex$sports, \",\")\n\n# Aplatir la liste des sports en un seul vecteur\nsports_flat <- unlist(data_ex$sports_list)\n\n# Compter la fréquence de chaque sport\nsports_count <- table(sports_flat)\n\n# Trouver le sport le plus fréquent\nmost_frequent_sport <- names(which.max(sports_count))\n\n# Identifier les sites accueillant ce sport\nsites_most_frequent_sport <- data_ex[names(data_ex)[which(sapply(data_ex$sports_list, function(x) most_frequent_sport %in% x))], \"nom\"]\n\n# Afficher le sport le plus fréquent et les sites correspondants\nprint(paste(\"La discipline la plus répandue est:\", most_frequent_sport))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"La discipline la plus répandue est: Athlétisme\"\n```\n:::\n\n```{.r .cell-code}\nprint(\"Les sites accueillant cette discipline sont :\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les sites accueillant cette discipline sont :\"\n```\n:::\n\n```{.r .cell-code}\nprint(sites_most_frequent_sport)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA NA NA NA\n```\n:::\n\n```{.r .cell-code}\n# Filtrer les données pour la discipline d'Athlétisme\nsites_athletisme <- data_ex[grepl(\"Athlétisme\", data_ex$sports), ]\n\n# Extraire les noms des sites accueillant l'Athlétisme\nnoms_sites_athletisme <- unique(sites_athletisme$nom)\n\n# Affichage des noms des sites\nprint(\"Les sites accueillant l'athlétisme sont :\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les sites accueillant l'athlétisme sont :\"\n```\n:::\n\n```{.r .cell-code}\nprint(noms_sites_athletisme)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Stade de France\"         \"Hôtel de ville de Paris\"\n[3] \"Pont d'Iéna\"             \"Invalides\"              \n```\n:::\n:::\n\n\n\\\nLa discipline qui aura lieu sur le plus grand nombre de sites est l'athlétisme. Les lieux en question sont :\n\n-   Stade de France\n\n-   Hôtel de ville de Paris\n\n-   Pont d'Iéna\n\n-   Invalides\n\n#### 9. A vol d’oiseau, quels sont les sites les deux sites les plus proches ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Charger la librairie geosphere pour le calcul de distance\nlibrary(geosphere)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'geosphere' a été compilé avec la version R 4.3.3\n```\n:::\n\n```{.r .cell-code}\n# Extraire les coordonnées et les transformer en matrice numérique\ncoords <- strsplit(as.character(data_ex$geo_point), \", \")\ncoords <- do.call(rbind, lapply(coords, as.numeric))\n\n# Calculer les distances entre tous les couples de sites\ndistances <- distm(coords, fun = distHaversine)\n\n# Trouver la paire de sites la plus proche\nmin_distance <- which(distances == min(distances[upper.tri(distances)]), arr.ind = TRUE)\n\n# Afficher les noms des deux sites les plus proches\nprint(paste(\"Les deux sites les plus proches sont :\", data_ex$nom[min_distance[1,1]], \"et\", data_ex$nom[min_distance[1,2]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les deux sites les plus proches sont : Stade BMX de Saint-Quentin-en-Yvelines et Vélodrome National de Saint-Quentin-en-Yvelines\"\n```\n:::\n:::\n\n\nLes deux sites les plus proches sont : **Stade BMX de Saint-Quentin-en-Yvelines** et **Vélodrome National de Saint-Quentin-en-Yvelines**.\n\n#### 10. Quels sont les deux sites les plus éloignés ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Charger la librairie nécessaire pour le calcul de distance\nlibrary(geosphere)\n\n# Extraire les coordonnées et les convertir en numérique\ncoords <- strsplit(as.character(data_ex$geo_point), \", \")\ncoords <- lapply(coords, function(x) as.numeric(x))\ncoords <- do.call(rbind, coords)\n\n# Calculer les distances entre tous les sites\ndistances <- distm(coords, coords, fun = distHaversine)\n\n# Trouver les indices des deux sites les plus proches\nindices_proches <- which(distances == min(distances[upper.tri(distances)]), arr.ind = TRUE)\n\n# Trouver les indices des deux sites les plus éloignés\nindices_eloignes <- which(distances == max(distances), arr.ind = TRUE)\n\n# Afficher les noms des sites les plus proches\nprint(\"Les deux sites les plus proches sont :\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les deux sites les plus proches sont :\"\n```\n:::\n\n```{.r .cell-code}\nprint(data_ex$nom[indices_proches])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Stade BMX de Saint-Quentin-en-Yvelines\"         \n[2] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n[3] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n[4] \"Stade BMX de Saint-Quentin-en-Yvelines\"         \n```\n:::\n\n```{.r .cell-code}\n# Afficher les noms des sites les plus éloignés\nprint(\"Les deux sites les plus éloignés sont :\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les deux sites les plus éloignés sont :\"\n```\n:::\n\n```{.r .cell-code}\nprint(data_ex$nom[indices_eloignes])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Colline d'Elancourt\" \"Stade nautique\"      \"Stade nautique\"     \n[4] \"Colline d'Elancourt\"\n```\n:::\n:::\n\n\nLes deux sites les plus éloignés sont la **Colline d'Elancourt** et le **Stade Nautique**.\n\n#### 11. Vous êtes un heureux millionaire et souhaitez investir dans un bien immobilier. Vous décidez d’acheter un appartement situé au barycentre de l’ensemble des sites olympiques.\n\n#### Où se situe cet appartement ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sélection des sites olympiques et mixtes\nsites_olympiques <- data_ex[grepl(\"Site olympique\", data_ex$sites_olympiques_paralympiques), ]\n\n# Extraction des coordonnées géographiques\ncoords <- strsplit(as.character(sites_olympiques$geo_point), \", \")\ncoords <- lapply(coords, function(x) as.numeric(x))\ncoords <- do.call(rbind, coords)\n\n# Calcul du barycentre\nbarycentre <- colMeans(coords)\n\n# Affichage des coordonnées du barycentre\nprint(paste(\"Le barycentre des sites olympiques est situé aux coordonnées suivantes : Latitude =\", barycentre[1], \", Longitude =\", barycentre[2]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Le barycentre des sites olympiques est situé aux coordonnées suivantes : Latitude = 48.8581648461538 , Longitude = 2.27905757692308\"\n```\n:::\n:::\n\n\nD'après les résultats, le barycentre des sites olympiques est situé aux coordonnées suivantes : Latitude = 48.8581648461538, Longitude = 2.27905757692308 ce qui se situe à Paris, plus précisément au 17 Place du Trocadéro et du 11 Novembre.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}